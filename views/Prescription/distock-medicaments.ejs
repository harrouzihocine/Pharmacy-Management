<!-- Batch Selection Modal -->
<button
  type="button"
  class="btn me-2 archive-btn px-2 py-1"
  data-bs-toggle="modal"
  data-bs-target="#<%= medicament.medicamentId._id %>"
>
<img width="30" height="30" src="https://img.icons8.com/3d-fluency/30/sell-stock.png" alt="sell-stock"/>
</button>
<div
  class="modal fade add-storage-modal"
  id="<%= medicament.medicamentId._id %>"
  data-bs-keyboard="true"
  tabindex="-1"
  aria-labelledby="staticBackdropLabel"
  aria-hidden="true"
>

  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
    <div class="modal-content add-storage-page-container">
      <div class="modal-header">
        <h5 class="modal-title" id="assignementMedicamants-<%= medicament._id %>">Distock Medicament</h5>
        <div class="d-flex flex-column">
        <h6><%= medicament.medicamentId.designation %></h6>
      <input type="text" id="serviceABV" name="serviceABV" value="<%= serviceABV %>" hidden>
      <input type="text" id="distocked-medicament-quantity" name="distocked-medicament-quantity" value="<%= medicament.quantity %>" hidden>
        <h5><strong>Quantity requested:</strong> <%= medicament.quantity %></h5>
      </div>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>

      <div class="modal-body">
        <form class="search-bar ">
            <input type="text" id="searchMED" placeholder="Search in medicaments list" />
          </form>
        <table class="table table-striped table-bordered modal-batch-selection-table sortable">
          <thead>
            <tr>
                <th>Barcode</th>
              <th>Available Quantity</th>
              <th>Quantity to Distock</th>
            </tr>
          </thead>
          <tbody id="tablebodyMED">
            <% let hasMatchingStocks = false; %> <!-- Initialize flag -->
            <% if (sourceStock && sourceStock.length > 0) { %>
              <% sourceStock.forEach(stock => { %>
                <% if (stock.medicamentId.toString() === medicament.medicamentId._id.toString()) { %>
                  <% hasMatchingStocks = true; %> <!-- Mark if a match is found -->
                  <tr class="distock-table-row" id="assignementMedicamants-tr" data-stock-id="<%=stock._id%>" data-medicament-id ="medicament.medicamentId._id">
                    <td class="barcode"><%= stock.barcode %></td>
                    <td class="available-quantity"><%= stock.quantity%></td>
                    <td>
                      <input 
                        type="number" 
                        class="form-control modal-batch-quantity-input" 
                        id="distockedquantity-input"  
                        min="0" 
                        max="<%= stock.quantity %>"
                      >
                    </td>
                  </tr>
                <% } %>
              <% }); %>
              <% if (!hasMatchingStocks) { %> <!-- No matching stocks found -->
                <tr>
                  <td colspan="6" class="demand-empty-row">No Medicaments found in stock</td>
                </tr>
              <% } %>
            <% } else { %> <!-- sourceStock is empty or undefined -->
              <tr>
                <td colspan="6" class="demand-empty-row">No Medicaments found in stock</td>
              </tr>
            <% } %>
          </tbody>
          
        </table>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn trans-btn distock-table-save" >Save</button>
        <button type="button" class="btn gear-btn" data-bs-dismiss="modal">Cancel</button>

      </div>
    </div>
  </div>
</div>
</div>
<script>
 // Function to handle the Enter key press or click in the search bar
function handleSearchAction(event) {
  if ( event.key === 'Enter') {
    event.preventDefault(); // Prevent the default form submission

    const visibleRows = getVisibleRows(); // Get all visible rows
    if (visibleRows.length > 0) {
      const firstVisibleRow = visibleRows[0];
      const quantityInput = firstVisibleRow.querySelector('.modal-batch-quantity-input');
      const quantity = document.getElementById('distocked-medicament-quantity').value;
      focusAndIncrementInput(quantityInput,quantity); // Focus and increment the input value
      setupInputEnterHandler(quantityInput); // Set up the Enter key handler for the input field
    } else {
      alert('No matching items found.'); // Show alert if no visible rows
    }
  }
}

document.querySelectorAll('.distock-table-save').forEach((button) => {
  button.addEventListener('click', function () {
    const serviceABV = document.getElementById('serviceABV').value;
    const medicamentId = this.closest('.modal').id; // Get the medicamentId from the modal's ID
    saveBatchSelection(medicamentId,serviceABV); // Call the save function with the medicamentId
  });
});

</script>