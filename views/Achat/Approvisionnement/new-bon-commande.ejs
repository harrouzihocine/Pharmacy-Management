<% layout('layouts/boilerplate') %>
<div class="create-prescription-page-container">
  <div class="create-prescription-header">
    <button class="btn back-btn back-button" onclick="window.location.href='/achat/approvisionnement/BC'">
      <i class="bi bi-arrow-left-circle"></i>
    </button>
    <h1>Create BC</h1>
  </div>

  <form id="createEmptyBCForm"  class="bon-reception-form" action="/achat/approvisionnement/BC/new" method="POST">
    <!-- Common fields outside table -->
    <div class="row mb-3">
      <div class="col-md-6">
        <label for="fournisseur" class="form-label">Fournisseur</label>
        <select id="fournisseur" name="fournisseurId" class="form-select" required>
          <option value="" disabled selected>Select fournisseur</option>
          <% fournisseurs.forEach(fournisseur => { %>
            <option value="<%= fournisseur._id %>"><%= fournisseur.name %></option>
          <% }) %>
        </select>
      </div>
      <div class="col-md-6">
        <label for="date" class="form-label">Date</label>
        <input type="date" id="date" name="date" class="form-control" required>
      </div>
    </div>

    <table class="create-prescription-table mt-2" id="prescription-MedicamentTable">
      <thead>
        <tr>
          <th>Item</th>
          <th>Quantity</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="width: 60%;">
            <select class="form-select form-select-lg medicament-select" name="request[0][medicamentId]" required>
              <option value="" disabled selected>Select item</option>
              <% Medicaments.forEach(Medicament => { %>
                <option value="<%= Medicament._id %>"><%= Medicament.designation %></option>
              <% }) %>
            </select>
          </td>
          <td>
            <input type="number" class="form-control" name="request[0][quantity]" min="0" placeholder="Enter quantity" required>
          </td>
          <td>
            <button type="button" class="btn delete-btn"><i class="bi bi-trash"></i></button>
          </td>
        </tr>
      </tbody>
    </table>

    <button type="button" class="btn add-command" id="addRowBtn">Add Item</button>

    <div class="col-12 mt-2">
      <label for="notes" class="form-label">Notes</label>
      <textarea id="notes" name="notes" class="form-control" rows="2" placeholder="Enter notes"></textarea>
    </div>

    <div class="prescription-action-buttons mt-3">
      <button type="submit" class="btn btn-primary create-facture-proforma-btn">Create BC</button>
    </div>
  </form>
</div>

<template id="rowTemplate">
  <tr>
    <td style="width: 60%;">
      <select class="form-select form-select-lg medicament-select" name="request[{{index}}][medicamentId]" required>
        <option value="" disabled selected>Select item</option>
        <% Medicaments.forEach(Medicament => { %>
          <option value="<%= Medicament._id %>"><%= Medicament.designation %></option>
        <% }) %>
      </select>
    </td>
    <td>
      <input type="number" class="form-control" name="request[{{index}}][quantity]" min="0" placeholder="Enter quantity" required>
    </td>
    <td>
      <button type="button" class="btn delete-btn"><i class="bi bi-trash"></i></button>
    </td>
  </tr>
</template>

<script>
document.addEventListener("DOMContentLoaded", function () {
  // Set default date to today
  const today = new Date().toISOString().split('T')[0];
  document.getElementById('date').value = today;

  // Initialize Choices.js for select elements
  const initializeChoices = (selectElement) => {
    return new Choices(selectElement, {
      searchEnabled: true,
      itemSelectText: "",
      noResultsText: "No items found",
      placeholder: true,
      placeholderValue: "Select item",
      searchFloor: 1,
      searchResultLimit: 0,
      shouldSort: false,
      position: "bottom"
    });
  };

  // Initialize main fournisseur select
  initializeChoices(document.getElementById('fournisseur'));

  // Initialize medicament selects
  document.querySelectorAll('.medicament-select').forEach(select => {
    initializeChoices(select);
  });

  // Add new row functionality
  document.getElementById("addRowBtn").addEventListener("click", function () {
    const tbody = document.querySelector("#prescription-MedicamentTable tbody");
    const rowCount = tbody.rows.length;
    
    // Get template content and replace index
    const template = document.getElementById("rowTemplate").innerHTML;
    const newRowHTML = template.replace(/{{index}}/g, rowCount);
    
    // Create and append new row
    const newRow = document.createElement("tr");
    newRow.innerHTML = newRowHTML;
    tbody.appendChild(newRow);

    // Initialize Choices.js for new select
    initializeChoices(newRow.querySelector('.medicament-select'));
  });

  // Delete row functionality
  document.querySelector("#prescription-MedicamentTable").addEventListener("click", function(e) {
    if (e.target.closest('.delete-btn')) {
      const row = e.target.closest('tr');
      if (document.querySelectorAll("#prescription-MedicamentTable tbody tr").length > 1) {
        row.remove();
      } else {
        alert("Cannot delete the last row");
      }
    }
  });

  // Form validation
  document.getElementById("createPrescriptionForm").addEventListener("submit", function(e) {
    const rows = document.querySelectorAll("#prescription-MedicamentTable tbody tr");
    let isValid = true;

    // Check fournisseur and date
    if (!document.getElementById('fournisseur').value || !document.getElementById('date').value) {
      isValid = false;
    }

    // Check each row
    rows.forEach(row => {
      const medicament = row.querySelector('[name$="[medicamentId]"]').value;
      const quantity = row.querySelector('[name$="[quantity]"]').value;

      if (!medicament || !quantity) {
        isValid = false;
      }
    });

    if (!isValid) {
      e.preventDefault();
      alert("Please fill in all required fields");
    }
  });
});
</script>