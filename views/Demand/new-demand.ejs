<% layout('layouts/boilerplate') %>
<div class="demand-container" id="newDemandPage">
  <h5 class="demand-title">New Demand</h5>

  <form method="POST" class="row needs-validation demand-form" action="/inStock/service/medicament-details/settings" novalidate>
    <!-- Header Section: General Information -->
    <div class="row mb-3">
      <!-- Source Depot -->
      <div class="col-md-6">
        <label for="sourceDepot" class="form-label">Source</label>
        <select class="form-select" id="sourceDepot" name="sourceDepot" aria-readonly="true">
          <% services.forEach(service => { %>
          <% if(service._id === serviceABV){ %>
          <option value="<%= service._id %>" selected><%= service.name %></option>
          <% } %>
          <% }) %>
        </select>
        <div class="invalid-feedback">
          Please select a source depot.
        </div>
      </div>

      <!-- Destination Depot -->
      <div class="col-md-6">
        <label for="destinationDepot" class="form-label">Destination</label>
        <select class="form-select" id="destinationDepot" name="destinationDepot" required>
          <% services.forEach(service => { %>
          <% if(service._id !== serviceABV){ %>
          <option value="<%= service._id %>" data-service-name="<%= service.name %>">
            <%= service.name %>
          </option>
          <% }}) %>
        </select>
        <div class="invalid-feedback">
          Please select a destination depot.
        </div>
      </div>
    </div>

    <div class="row mb-3">
      <!-- Reason -->
      <div class="col-12">
        <label for="reason" class="form-label">Comment</label>
        <textarea id="reason" name="comment" class="form-control" rows="3" required placeholder="Enter reason for the transfer"></textarea>
        <div class="invalid-feedback">
          Please provide a comment for the .
        </div>
      </div>
    </div>

    <!-- Medicament Table (Main Section) -->
    <div class="table-responsive mb-3" width="100%">
      <table class="demand-table" id="MedicamentTable">
        <thead>
          <tr>
            <th>Medicament</th>
            <th>Quantity</th>
            <th>Remarks</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <select class="form-select" name="Medicament[0][Medicament]" required>
                <option value="" disabled selected>Select Medicament</option>
                <% Medicaments.forEach(Medicament => { %>
                  <option value="<%= Medicament.medicamentId %>">
                    <%= Medicament.medicamentId.designation %>
                  </option>
                <% }) %>
              </select>
            </td>
            <td><input type="number" class="form-control" name="Medicament[0][requestedQuantity]" required min="1" /></td>
            <td><select class="form-select" name="Medicament[0][priority]" required>
              <option value="" disabled selected>Select Priority</option>
              
                <option value="Urgent">Urgent</option>
                <option value="Normal">Normal</option>
                <option value="Faible">Faible</option>
             
            </select></td>
            <td>
              <button type="button" class="btn delete-btn"><i class="bi bi-trash"></i></button>
            </td>
          </tr>
        </tbody>
      </table>
      <button type="button" class="btn add-command" id="addRowBtn">Add Medicament</button>
    </div>
     
    <div class="d-flex">
      <button type="submit" class="btn add-command" >Submit</button>
      <button type="reset" class="btn cancel-btn">Cancel</button>
    </div>
  </form>
</div>

<script>
  // Dynamically add a new row to the Medicament table
document.getElementById("addRowBtn").addEventListener("click", function() {
  const table = document.getElementById("MedicamentTable").querySelector("tbody");
  
  // Check if the table has rows
  let newRow;
  if (table.rows.length === 0) {
    // If the table is empty, create the first row manually
    newRow = table.insertRow(); // Create a new row
    newRow.innerHTML = `
       <td>
              <select class="form-select" name="Medicament[0][Medicament]" required>
                <option value="" disabled selected>Select Medicament</option>
                <% Medicaments.forEach(Medicament => { %>
                  <option value="<%= Medicament.medicamentId %>">
                    <%= Medicament.medicamentId.designation %>
                  </option>
                <% }) %>
              </select>
            </td>
            <td><input type="number" class="form-control" name="Medicament[0][requestedQuantity]" required min="1" /></td>
            <td><select class="form-select" name="Medicament[0][priority]" required>
              <option value="" disabled selected>Select Priority</option>
              
                <option value="Urgent">Urgent</option>
                <option value="Normal">Normal</option>
                <option value="Faible">Faible</option>
             
            </select></td>
            <td>
              <button type="button" class="btn delete-btn"><i class="bi bi-trash"></i></button>
            </td>
    `;
  } else {
    // If the table has rows, clone the first row and update the names
    newRow = table.querySelector("tr").cloneNode(true);
    const rowCount = table.rows.length;

    // Update names for each product
    newRow.querySelectorAll("input, select").forEach((input) => {
      input.name = input.name.replace("[0]", `[${rowCount}]`); // Update the index for the new row
      input.value = ""; // Reset values
    });
    table.appendChild(newRow);
  }
});

// Remove row functionality
document.getElementById("MedicamentTable").addEventListener("click", function(event) {
  if (event.target.classList.contains("delete-btn")) {
    event.target.closest("tr").remove();
  }
});

</script>
